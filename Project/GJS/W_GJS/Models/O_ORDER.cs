//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W_GJS.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class O_ORDER
    {
        public O_ORDER()
        {
            this.D_ORDER_DETAIL = new HashSet<D_ORDER_DETAIL>();
        }
        [Display(Name = "Đơn hàng")]
        public long ORDER_CD { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Mã đơn hàng")]
        public string ORDER_CODE { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Nội dung đơn hàng")]
        public string ORDER_CONTENT { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Tên nhân viên")]
        public Nullable<long> EMPLOYEE_CD { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "SĐT")]
        public string PHONE { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Email")]
        public string EMAIL { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Địa chỉ giao hàng")]
        public string DELIVERY_ADDRESS { get; set; }
        public Nullable<long> STATUS { get; set; }
        public Nullable<bool> ACTIVE { get; set; }
        [DataType(DataType.Text)]
        [Display(Name = "Ngày đặt hàng")]
        public Nullable<System.DateTime> CREATEDATE { get; set; }
        public Nullable<long> CUSTOMER_CD { get; set; }
    
        public virtual ICollection<D_ORDER_DETAIL> D_ORDER_DETAIL { get; set; }
        public virtual M_EMPLOYEE M_EMPLOYEE { get; set; }
        public virtual O_CUSTOMER O_CUSTOMER { get; set; }


        public int AddCart(O_PRODUCT PRODUCT)
        {
            GJSEntities db = new GJSEntities();
            bool co = false;
            if (D_ORDER_DETAIL == null)
            {
                D_ORDER_DETAIL = new List<D_ORDER_DETAIL>();
            }
            D_ORDER_DETAIL Detail_Cart = new D_ORDER_DETAIL();
            foreach (D_ORDER_DETAIL d_order in D_ORDER_DETAIL)
            {
                if (PRODUCT.PRODUCT_CD == d_order.O_PRODUCT.PRODUCT_CD)
                {
                    co = true;
                    Detail_Cart = d_order;
                    break;
                }
            }
            if (co == true)
            {
                Detail_Cart.QUANTITY += PRODUCT.QUANTITY;
                Detail_Cart.SIZE = PRODUCT.SIZE;
                Detail_Cart.PRICE = 0;
                return 1;
            }
            else
            {

                Detail_Cart = new D_ORDER_DETAIL
                {
                    QUANTITY = PRODUCT.QUANTITY,
                    SIZE = PRODUCT.SIZE,
                    O_PRODUCT = db.O_PRODUCT.Find(PRODUCT.PRODUCT_CD),
                    PRODUCT_CD = PRODUCT.PRODUCT_CD
                };

              
                Detail_Cart.PRICE = 0;
               

                D_ORDER_DETAIL.Add(Detail_Cart);
                return 1;
            }
        }
        public void DeleteCart(O_PRODUCT PRODUCT)
        {
            foreach (D_ORDER_DETAIL d_order in D_ORDER_DETAIL)
            {
                if (PRODUCT.PRODUCT_CD == d_order.O_PRODUCT.PRODUCT_CD)
                {
                    D_ORDER_DETAIL.Remove(d_order);
                    break;
                }
            }

        }
        public void UpdateCart(O_PRODUCT PRODUCT)
        {

            foreach (D_ORDER_DETAIL Detail_Cart in D_ORDER_DETAIL)
            {
                if (PRODUCT.PRODUCT_CD == Detail_Cart.O_PRODUCT.PRODUCT_CD)
                {
                    Detail_Cart.QUANTITY = PRODUCT.QUANTITY;
                    Detail_Cart.SIZE = Detail_Cart.SIZE;
                    Detail_Cart.PRICE = 0;
                     break;
                }
            }
        }

        public static dynamic Price_Total(O_ORDER ord)
        {
            decimal? Price_Toatal = 0;
            foreach (var D_ord in ord.D_ORDER_DETAIL)
            {
                Price_Toatal += D_ord.PRICE;
            }
            return Price_Toatal;
        }

    }
}
